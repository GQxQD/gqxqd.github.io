[{"title":"test2","date":"2017-08-24T11:58:27.000Z","path":"2017/08/24/2017-08-24-test2/","text":"","tags":[{"name":"test","slug":"test","permalink":"http://www.gqxqd.cn/tags/test/"},{"name":"test2","slug":"test2","permalink":"http://www.gqxqd.cn/tags/test2/"}]},{"title":"webpack学习笔记01","date":"2017-08-24T03:45:00.000Z","path":"2017/08/24/webpack学习笔记01/","text":"webpack的安装和命令行1.创建项目文件夹12mkdir webpack-testcd webpack-test 2.初始化项目信息1npm init 3.安装webpack1npm install webpack --save-dev 4.创建hello.js123function hello(str) &#123; alert(str);&#125; 5.使用webpack打包hello.js为hello.bundle.js1webpack hello.js hello.bundle.js 123456Hash: cfd091774cd550696b74 // 生成的哈希值Version: webpack 3.4.1 // 打包webpack的版本Time: 66ms // 打包花费的时间 Asset Size Chunks Chunk Nameshello.bundle.js 2.51 kB 0 [emitted] main [0] ./hello.js 41 bytes &#123;0&#125; [built] 生成的hello.bundle.js123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475/******/ (function(modules) &#123; // webpackBootstrap/******/ // The module cache/******/ var installedModules = &#123;&#125;;/******//******/ // The require function/******/ function __webpack_require__(moduleId) &#123;/******//******/ // Check if module is in cache/******/ if(installedModules[moduleId]) &#123;/******/ return installedModules[moduleId].exports;/******/ &#125;/******/ // Create a new module (and put it into the cache)/******/ var module = installedModules[moduleId] = &#123;/******/ i: moduleId,/******/ l: false,/******/ exports: &#123;&#125;/******/ &#125;;/******//******/ // Execute the module function/******/ modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);/******//******/ // Flag the module as loaded/******/ module.l = true;/******//******/ // Return the exports of the module/******/ return module.exports;/******/ &#125;/******//******//******/ // expose the modules object (__webpack_modules__)/******/ __webpack_require__.m = modules;/******//******/ // expose the module cache/******/ __webpack_require__.c = installedModules;/******//******/ // define getter function for harmony exports/******/ __webpack_require__.d = function(exports, name, getter) &#123;/******/ if(!__webpack_require__.o(exports, name)) &#123;/******/ Object.defineProperty(exports, name, &#123;/******/ configurable: false,/******/ enumerable: true,/******/ get: getter/******/ &#125;);/******/ &#125;/******/ &#125;;/******//******/ // getDefaultExport function for compatibility with non-harmony modules/******/ __webpack_require__.n = function(module) &#123;/******/ var getter = module &amp;&amp; module.__esModule ?/******/ function getDefault() &#123; return module['default']; &#125; :/******/ function getModuleExports() &#123; return module; &#125;;/******/ __webpack_require__.d(getter, 'a', getter);/******/ return getter;/******/ &#125;;/******//******/ // Object.prototype.hasOwnProperty.call/******/ __webpack_require__.o = function(object, property) &#123; return Object.prototype.hasOwnProperty.call(object, property); &#125;;/******//******/ // __webpack_public_path__/******/ __webpack_require__.p = \"\";/******//******/ // Load entry module and return exports/******/ return __webpack_require__(__webpack_require__.s = 0);/******/ &#125;)/************************************************************************//******/ ([/* 0 *//***/ (function(module, exports) &#123;function hello(str) &#123; alert(str);&#125;/***/ &#125;)/******/ ]); 6.新建world.js123function world() &#123; return &#123;&#125;;&#125; 7.修改hello.js12345require('./world.js');function hello(str) &#123; alert(str);&#125; 8.再次执行打包命令12345678webpack hello.js hello.bundle.jsHash: 6404649d5ce4b073e4d6Version: webpack 3.4.1Time: 76ms Asset Size Chunks Chunk Nameshello.bundle.js 2.65 kB 0 [emitted] main [0] ./hello.js 67 bytes &#123;0&#125; [built] [1] ./world.js 37 bytes &#123;0&#125; [built] ９.添加style.css文件12345678html, body &#123; padding: 0; margin: 0;&#125;body&#123; background-color: #9df;&#125; 10.修改hello.js文件123456require('./world.js');require('./style.css');function hello(str) &#123; alert(str);&#125; 11.打包出现错误，原因是没有安装 css-loader 和 style-loader1234567891011121314151617webpack hello.js hello.bundle.jsHash: 1c0c9f484c0804ffd23fVersion: webpack 3.4.1Time: 78ms Asset Size Chunks Chunk Nameshello.bundle.js 2.97 kB 0 [emitted] main [0] ./hello.js 92 bytes &#123;0&#125; [built] [1] ./world.js 37 bytes &#123;0&#125; [built] [2] ./style.css 234 bytes &#123;0&#125; [built] [failed] [1 error]ERROR in ./style.cssModule parse failed: webpack-test\\style.css Unexpected token (1:11)You may need an appropriate loader to handle this file type.| html, body &#123;| padding: 0;| margin: 0; @ ./hello.js 2:0-22 12.安装 css-loader 和 style-loader1npm install css-loader style-loader --save-dev","tags":[{"name":"webpack","slug":"webpack","permalink":"http://www.gqxqd.cn/tags/webpack/"},{"name":"笔记","slug":"笔记","permalink":"http://www.gqxqd.cn/tags/笔记/"}]},{"title":"My New Post","date":"2017-08-23T16:14:57.000Z","path":"2017/08/24/My-New-Post/","text":"testtesttesttests logo","tags":[{"name":"test","slug":"test","permalink":"http://www.gqxqd.cn/tags/test/"},{"name":"测试","slug":"测试","permalink":"http://www.gqxqd.cn/tags/测试/"}]},{"title":"Hello World","date":"2017-08-23T14:23:21.738Z","path":"2017/08/23/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]